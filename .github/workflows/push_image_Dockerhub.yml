---

  name: published my first image docker
  
  on:
    push:
      branches: 
        - push-image-dockerhub
  
  env:
    REGISTRY: "docker.io" 
    IMAGE_NAME: "matthieu3m/project-devops" 
    TAG: ${{ github.sha }}
         
  
  permissions: write-all
  
  jobs:
    push_to_registry:
      name: Push Docker image to Docker Hub
      runs-on: ubuntu-latest
  
      steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
            sparse-checkout: | # Ici nous ajoutons le with sparse-checkout pour cibler uniquement notre dossier push image Dockerhub
              .github
              ./push_image_Dockerhub
        
        - name: Do something with the folder (verification) # Permet de vérifier si le dossier à bien été associé au sparse-checkout (debug)
          run: |
            ls ./push_image_Dockerhub
  
        - name: login to docker Hub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

        - name: Set up Docker Buildx # Cette step nous sert à Set Docker Buildx pour charger nos images pour les différent processeurs plus tard dans le job
          run: |
            docker buildx create --use
  
        - name: Extract metadata (tags, labels) for Docker
          id: meta
          uses: docker/metadata-action@v2
          with:
            images: matthieu3m/image-nodejs
        
        - name: Build and push Docker image
          id: push 
          uses: docker/build-push-action@v2
          with:
            context: ./push_image_Dockerhub # ici, de base il faut le context général à savoir "."
            file: ./push_image_Dockerhub/Dockerfile # De même ici il faudrait ciblé le Dockerfile à la racine
            push: true
            tags: | 
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}:${{ env.TAG }}
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}:latest
            platforms: linux/arm64,linux/amd64 # avec l'option platforms nous ajoutons des options pour les differents Processeurs
            labels: ${{ steps.meta.outputs.labels }}
  
        - name: Generate artifact attestation
          uses: actions/attest-build-provenance@v2
          with: 
            subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
            subject-digest: ${{ steps.push.outputs.digest }}
            push-to-registry: true
            github-token: ${{ secrets.GITHUB_TOKEN }}
            
  